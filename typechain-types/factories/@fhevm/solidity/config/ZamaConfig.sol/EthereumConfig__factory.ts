/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  EthereumConfig,
  EthereumConfigInterface,
} from "../../../../../@fhevm/solidity/config/ZamaConfig.sol/EthereumConfig";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b6100bc60201b60201c565b6102a8565b61003a610228565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905090565b6100cb816100ce60201b60201c565b50565b60006100de61020060201b60201c565b905081600001518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081602001518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081604001518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606001518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60007f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700905090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60c3806102b66000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063da1f12ab14602d575b600080fd5b60336047565b604051603e91906074565b60405180910390f35b6000604f6054565b905090565b60006001905090565b6000819050919050565b606e81605d565b82525050565b6000602082019050608760008301846067565b9291505056fea2646970667358221220016a2bd39a40d1ef9b4492237f1e0818c64958467f00bda638e16c961674b24064736f6c63430008180033";

type EthereumConfigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthereumConfigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthereumConfig__factory extends ContractFactory {
  constructor(...args: EthereumConfigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EthereumConfig & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EthereumConfig__factory {
    return super.connect(runner) as EthereumConfig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthereumConfigInterface {
    return new Interface(_abi) as EthereumConfigInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EthereumConfig {
    return new Contract(address, _abi, runner) as unknown as EthereumConfig;
  }
}
